{"version":3,"file":"static/js/93.62dd5911.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/RequestError/RequestError.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsGalleryWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[0]}px;\n`;\n\nexport const ActorCard = styled.li`\n  width: 100%;\n  max-width: 200px;\n  height: 240px;\n  display: inline-block;\n\n  background: ${p => p.theme.colors.grayFirst};\n  color: ${p => p.theme.colors.white};\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n\n  margin-bottom: ${p => p.theme.space[8]}px;\n  border-radius: ${p => p.theme.radii.highRound};\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const ActorImage = styled.img`\n  width: 100%;\n  height: 260px;\n\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  display: block;\n  border-top-left-radius: ${p => p.theme.radii.highRound};\n  border-top-right-radius: ${p => p.theme.radii.highRound};\n`;\n\nexport const ActorDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[1]}px;\n\n  padding: ${p => p.theme.space[2]}px;\n  margin: ${p => p.theme.space[0]}px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n\nexport const ActorDescriptionText = styled.h3`\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n`;\n\nexport const MissingCasts = styled.p`\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n\n  color: ${p => p.theme.colors.orangeFirst};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { animateScroll } from 'react-scroll';\n\nimport apiGet from 'service/api';\nimport { RequestError } from 'components/RequestError';\nimport defaultImage from 'components/defaultImg/defaultImage.png';\n\nimport {\n  ActorsGalleryWrapper,\n  ActorCard,\n  ActorImage,\n  ActorDescription,\n  ActorDescriptionText,\n  MissingCasts,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [castInfo, setCastInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const responseCasts = await apiGet.getActors(movieId);\n        if (!responseCasts) {\n          return;\n        }\n\n        setCastInfo(responseCasts);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (!castInfo) {\n    return;\n  }\n\n  if (castInfo) {\n    animateScroll.scrollMore(400);\n  }\n\n  const main_path = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      {castInfo.length > 0 ? (\n        <ActorsGalleryWrapper>\n          {castInfo.map(({ profile_path, original_name, character, id }) => {\n            return (\n              <ActorCard key={id}>\n                <ActorImage\n                  src={\n                    profile_path ? `${main_path}${profile_path}` : defaultImage\n                  }\n                  alt=\"actor profile\"\n                />\n                <ActorDescription>\n                  <ActorDescriptionText>\n                    Actor name: {original_name}\n                  </ActorDescriptionText>\n                  <ActorDescriptionText>\n                    Actor character: {character}\n                  </ActorDescriptionText>\n                </ActorDescription>\n              </ActorCard>\n            );\n          })}\n        </ActorsGalleryWrapper>\n      ) : (\n        <MissingCasts>We don't have any casts for this movie</MissingCasts>\n      )}\n      {error && <RequestError message={error} />}\n    </>\n  );\n};\n\nexport default Cast;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RequestError = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      {toast.error(\n        'An error occurred while searching for your query. Try to refine your search keyword.'\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nRequestError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '74c5e15336c71e6f10e46fc816460a0f';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get trending movies\nasync function getDataTrendingMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movies by search name\nasync function getDataMoviesBySearchName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movie by id\nasync function getDataMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// get actors by id\nasync function getDataActorsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// get reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  getTrending: getDataTrendingMovies,\n  movieById: getDataMovieById,\n  getReviews: getDataReviewsById,\n  getActors: getDataActorsById,\n  getMoviesByName: getDataMoviesBySearchName,\n};\n\nexport default apiGet;\n"],"names":["ActorsGalleryWrapper","styled","p","theme","space","ActorCard","colors","grayFirst","white","radii","highRound","ActorImage","ActorDescription","fontSizes","xs","lineHeights","body","ActorDescriptionText","MissingCasts","props","s","heading","fontWeights","bold","orangeFirst","movieId","useParams","useState","castInfo","setCastInfo","error","setError","useEffect","apiGet","responseCasts","message","animateScroll","length","map","profile_path","original_name","character","id","src","defaultImage","alt","RequestError","role","toast","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","name","query","cast","getDataReviewsById","page","getTrending","getDataTrendingMovies","movieById","getDataMovieById","getReviews","getActors","getDataActorsById","getMoviesByName","getDataMoviesBySearchName"],"sourceRoot":""}