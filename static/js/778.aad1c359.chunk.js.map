{"version":3,"file":"static/js/778.aad1c359.chunk.js","mappings":"oLAIaA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,iBAAKC,KAAK,QAAV,UACGC,EAAAA,GAAAA,MACC,yFAEF,uBAAIF,S,uNCPGG,EAAgBC,EAAAA,GAAAA,IAAH,oSAEJ,SAAAC,GAAK,OAAIA,EAAMC,SAErB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,SAASC,YAIzB,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAGV,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,SAASI,UAIhCC,GAAiBV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,srBAGd,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAGlB,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,SAASQ,SAE3B,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAGX,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,SAASI,UAClB,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,SAASI,UAGhC,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAIZ,SAAAL,GAAC,OAAIA,EAAEC,MAAMU,MAAMC,SACtB,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,SAASI,UAC1B,SAAAN,GAAC,OAAIA,EAAEC,MAAMY,QAAQC,QAGlB,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,KAUpB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eACrB,SAAAjB,GAAC,OAAIA,EAAEC,MAAMc,UAAUG,KAI3BC,EAAsBtB,EAAAA,GAAAA,IAAH,qKAGrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAOlBe,EAAavB,EAAAA,GAAAA,IAAH,0JAGP,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAGjB,SAAAT,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAIxBY,EAAmBxB,EAAAA,GAAAA,IAAH,8IACX,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAI1B,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAGlBiB,EAAazB,EAAAA,GAAAA,GAAH,kLACJ,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUQ,KACrB,SAAAvB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYC,QAC/B,SAAAzB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eAOlBS,EAAY7B,EAAAA,GAAAA,EAAH,yFACH,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,KACrB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYC,QAG7BE,EAAqB9B,EAAAA,GAAAA,EAAH,0CAIlB+B,EAAc/B,EAAAA,GAAAA,KAAH,4MACP,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAGjB,SAAAT,GAAC,OAAIA,EAAEC,MAAMU,MAAMC,SAChB,SAAAZ,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eAErB,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,SAASI,UACf,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eAGnCY,EAAgBhC,EAAAA,GAAAA,EAAH,wGACP,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUG,KACrB,SAAAlB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYM,WAC/B,SAAA9B,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eAGlBc,EAAelC,EAAAA,GAAAA,EAAH,8JACN,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,KACrB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYM,WAO7BE,EAAcnC,EAAAA,GAAAA,EAAH,oHACZ,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAClB,SAAAT,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACjB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUG,KACrB,SAAAlB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYC,QAC/B,SAAAzB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eAGlBgB,EAAapC,EAAAA,GAAAA,GAAH,8GAEV,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAMnByB,EAAiBrC,EAAAA,GAAAA,GAAH,wGAChB,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SACZ,SAAAL,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,KACrB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYM,W,SCpF1C,EAnDc,SAAC,GAWR,IAAD,QAVJK,UACEC,EASE,EATFA,cACAC,EAQE,EARFA,MACAC,EAOE,EAPFA,eACAC,EAME,EANFA,aACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAIIC,EAAa,kCACbC,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iCACE,SAACpD,EAAD,CAAeG,MAAOqC,GAAa,UAAOQ,GAAP,OAAoBR,GAAvD,UACE,SAAC7B,EAAD,CAAgB0C,GAAIJ,EAApB,qBAEF,UAAC1B,EAAD,YACE,SAACC,EAAD,CACE8B,IAAKV,GAAW,UAAOI,GAAP,OAAoBJ,GACpCW,IAAKd,KAEP,UAAChB,EAAD,YACE,SAACC,EAAD,UAAae,GAASC,KACtB,UAACZ,EAAD,eAAae,EAAb,QACA,UAACd,EAAD,yBACc,KACZ,SAACC,EAAD,UACGW,GAAgBa,OAAOb,GAAcc,QAAQ,SAGlD,SAACxB,EAAD,yBACA,SAACE,EAAD,UACGW,GAAY,0CAEf,SAACV,EAAD,uBACA,SAACC,EAAD,UACGU,EAAOW,OAAS,GACfX,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,SAACvB,EAAD,UAA0BuB,GAALD,kBC3DxBE,EAAkB7D,EAAAA,GAAAA,IAAH,qEAEjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAGlBsD,EAAkB9D,EAAAA,GAAAA,GAAH,+HAGb,SAAAG,GAAC,OAAIA,EAAEC,MAAMc,UAAUQ,KACrB,SAAAvB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYC,QAI7BmC,EAAoB/D,EAAAA,GAAAA,IAAH,8HAGrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAKfoD,GAAahE,EAAAA,EAAAA,IAAOiE,EAAAA,GAAPjE,CAAH,0PACR,SAAAG,GAAC,OAAIA,EAAEC,MAAMc,UAAUC,KACrB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMuB,YAAYC,QAC/B,SAAAzB,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SACT,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAE7B,SAAAL,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAAQ,SAAAT,GAAC,OAAIA,EAAEC,MAAMQ,MAAM,MAK9C,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,eACb,SAAAjB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,e,oBC+CxC,GAlEqB,WAAO,IAAD,IACjB8C,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWxB,EAAAA,EAAAA,OAEjByB,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEiCC,EAAAA,EAAAA,UAAiBT,GAFlD,UAESU,EAFT,wDAQGN,EAASM,GARZ,gDAUGJ,EAAS,KAAM5E,SAVlB,wDAAD,KAaC,CAACsE,IAEJ,IAAMlB,EAAY,oBAAGyB,EAASvB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,gCACGkB,IAAS,SAAC,EAAD,CAAO/B,UAAW+B,IAE3BA,IACC,UAACR,EAAD,YACE,SAACC,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAYZ,GAAG,OAAOF,MAAO,CAAEC,KAAMH,GAArC,mBAGA,SAACgB,EAAD,CAAYZ,GAAG,UAAUF,MAAO,CAAEC,KAAMH,GAAxC,2BAMLuB,IAAS,SAAC5E,EAAA,EAAD,CAAcC,QAAS2E,KAEjC,SAAC,EAAAM,SAAD,CACEC,UACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,GACdC,aAAa,GACbC,SAAS,MAVjB,UAeE,SAAC,KAAD,CAAQC,QAAS,CAAEpB,QAAAA,EAASG,MAAAA,Y,yEC3E9BkB,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAOWA,EAAKC,SAPhB,gH,aAYA,O,oBAAA,WAAyCnC,GAAzC,gFACE+B,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVG,MAAM,GAAD,OAAKpC,IAJd,kBAO2B+B,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAAgCpC,GAAhC,gFACEgC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiC/B,IAN5D,uBAMYmC,EANZ,EAMYA,KANZ,kBAQWA,GARX,gH,aAaA,O,oBAAA,WAAiCnC,GAAjC,gFACEgC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiC/B,EAAjC,aAN3B,uBAMYmC,EANZ,EAMYA,KANZ,kBAOWA,EAAKG,MAPhB,gHAYeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCvC,GAAlC,gFACEgC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVM,KAAM,GAJV,kBAO2BR,IAAAA,IAAA,UAAaD,EAAb,YAAiC/B,EAAjC,aAP3B,uBAOYmC,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMpB,EAAS,CACbyB,Y,WA/DaC,OAAAA,EAAAA,MAAAA,KAAAA,YAgEbC,UApDF,SAagC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,YAwCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,YAgBbO,UAzCF,SAaiC,GAAlBC,OAAAA,EAAAA,MAAAA,KAAAA,YA6BbC,gBAnEF,SAYyC,GAA1BC,OAAAA,EAAAA,MAAAA,KAAAA,aA0Df","sources":["components/RequestError/RequestError.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RequestError = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      {toast.error(\n        'An error occurred while searching for your query. Try to refine your search keyword.'\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nRequestError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const PosterWrapper = styled.div`\n  @media screen and (min-width: 550px) {\n    background: url(${props => props.photo}) 70% 0%;\n\n    position: ${p => p.theme.position.relative};\n    width: 100%;\n    background-attachment: fixed;\n    background-size: cover;\n    color: ${p => p.theme.colors.white};\n    display: flex;\n    height: 50vh;\n    justify-content: ${p => p.theme.position.center};\n  }\n`;\n\nexport const BackLinkButton = styled(Link)`\n  width: 100px;\n  height: 50px;\n  padding: ${p => p.theme.space[0]}px;\n\n  z-index: 100;\n  position: ${p => p.theme.position.fixed};\n  left: 232px;\n  top: ${p => p.theme.space[1]}px;\n\n  display: flex;\n  align-items: ${p => p.theme.position.center};\n  justify-content: ${p => p.theme.position.center};\n\n  background: transparent;\n  color: ${p => p.theme.colors.white};\n  box-shadow: 0 0 25px rgb(0 0 0 / 10%), inset 0 0 1px rgb(255 255 255 / 60%);\n\n  outline: inherit;\n  border-radius: ${p => p.theme.radii.round};\n  text-align: ${p => p.theme.position.center};\n  border: ${p => p.theme.borders.none};\n  text-decoration: none;\n  font-family: 'Amatic SC', cursive;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 50px;\n  font-weight: 500;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.orangeFirst};\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  padding: 0 30px 30px 30px;\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 450px;\n  margin-top: ${p => p.theme.space[8]}px;\n\n  @media screen and (min-width: 550px) {\n    margin-top: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const MovieTextWrapper = styled.div`\n  padding-left: ${p => p.theme.space[3]}px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-bottom: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.orangeFirst};\n\n  @media screen and (max-width: 360px) {\n    text-align: center;\n  }\n`;\n\nexport const MovieDate = styled.p`\n  margin-bottom: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n\nexport const MovieRatingWrapper = styled.p`\n  display: flex;\n`;\n\nexport const MovieRating = styled.span`\n  margin-left: ${p => p.theme.space[2]}px;\n  width: 50px;\n  height: 20px;\n  border-radius: ${p => p.theme.radii.round};\n  background-color: ${p => p.theme.colors.orangeFirst};\n  display: flex;\n  justify-content: ${p => p.theme.position.center};\n  box-shadow: 0 10px 20px ${p => p.theme.colors.orangeFirst};\n`;\n\nexport const OverviewTitle = styled.p`\n  margin-bottom: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n  color: ${p => p.theme.colors.orangeFirst};\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.heading};\n\n  @media screen and (min-width: 1200px) {\n    width: 800px;\n  }\n`;\n\nexport const GenresTitle = styled.p`\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.orangeFirst};\n`;\n\nexport const GenresList = styled.ul`\n  margin: 0 0 0 10px;\n  padding: ${p => p.theme.space[0]}px;\n\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nexport const GenresListItem = styled.li`\n  color: ${p => p.theme.colors.white};\n  margin-bottom: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  PosterWrapper,\n  BackLinkButton,\n  MovieDetailsWrapper,\n  MovieImage,\n  MovieTextWrapper,\n  MovieTitle,\n  MovieDate,\n  MovieRatingWrapper,\n  MovieRating,\n  OverviewTitle,\n  OverviewText,\n  GenresTitle,\n  GenresList,\n  GenresListItem,\n} from './Movie.styled';\n\nconst Movie = ({\n  movieData: {\n    backdrop_path,\n    title,\n    original_title,\n    vote_average,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n  },\n}) => {\n  const location = useLocation();\n  const image_path = 'https://image.tmdb.org/t/p/w500';\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <PosterWrapper photo={backdrop_path && `${image_path}${backdrop_path}`}>\n        <BackLinkButton to={backLinkHref}>Back</BackLinkButton>\n      </PosterWrapper>\n      <MovieDetailsWrapper>\n        <MovieImage\n          src={poster_path && `${image_path}${poster_path}`}\n          alt={title}\n        />\n        <MovieTextWrapper>\n          <MovieTitle>{title || original_title}</MovieTitle>\n          <MovieDate>({release_date})</MovieDate>\n          <MovieRatingWrapper>\n            User score:{' '}\n            <MovieRating>\n              {vote_average && Number(vote_average).toFixed(1)}\n            </MovieRating>\n          </MovieRatingWrapper>\n          <OverviewTitle>Overview:</OverviewTitle>\n          <OverviewText>\n            {overview || 'There is no description of this film'}\n          </OverviewText>\n          <GenresTitle>Genres:</GenresTitle>\n          <GenresList>\n            {genres.length > 0 &&\n              genres.map(({ id, name }) => (\n                <GenresListItem key={id}>{name}</GenresListItem>\n              ))}\n          </GenresList>\n        </MovieTextWrapper>\n      </MovieDetailsWrapper>\n    </>\n  );\n};\nexport default Movie;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AdditionWrapper = styled.div`\n  padding: 0 30px 30px 30px;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const MovieLinksTitle = styled.h3`\n  width: 300px;\n  margin: 0 0 30px 0;\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n  text-align: center;\n`;\n\nexport const MovieLinksWrapper = styled.div`\n  display: flex;\n  width: 300px;\n  gap: ${p => p.theme.space[4]}px;\n  justify-content: center;\n  padding: 0 0 30px 0;\n`;\n\nexport const MovieLinks = styled(NavLink)`\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.white};\n  border-radius: 6px;\n  padding: ${p => p.theme.space[1]}px ${p => p.theme.space[2]}px;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.orangeFirst};\n    border-color: ${p => p.theme.colors.orangeFirst};\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\n\nimport apiGet from 'service/api';\nimport { RequestError } from 'components/RequestError';\n\nimport Movie from 'components/Movie/Movie';\nimport {\n  AdditionWrapper,\n  MovieLinksWrapper,\n  MovieLinksTitle,\n  MovieLinks,\n} from './MovieDetails.styled';\n\nimport { Circles } from 'react-loader-spinner';\nimport { SpinerWrapper } from 'App/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movieAttributes = await apiGet.movieById(movieId);\n\n        if (!movieAttributes) {\n          return;\n        }\n\n        setMovie(movieAttributes);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {movie && <Movie movieData={movie} />}\n\n      {movie && (\n        <AdditionWrapper>\n          <MovieLinksTitle>Additional information</MovieLinksTitle>\n          <MovieLinksWrapper>\n            <MovieLinks to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </MovieLinks>\n            <MovieLinks to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </MovieLinks>\n          </MovieLinksWrapper>\n        </AdditionWrapper>\n      )}\n      {error && <RequestError message={error} />}\n\n      <Suspense\n        fallback={\n          <SpinerWrapper>\n            <Circles\n              height=\"80\"\n              width=\"80\"\n              color=\"#ff6b08\"\n              ariaLabel=\"circles-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n            />\n          </SpinerWrapper>\n        }\n      >\n        <Outlet context={{ movieId, movie }} />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '74c5e15336c71e6f10e46fc816460a0f';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get trending movies\nasync function getDataTrendingMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movies by search name\nasync function getDataMoviesBySearchName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movie by id\nasync function getDataMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// get actors by id\nasync function getDataActorsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// get reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  getTrending: getDataTrendingMovies,\n  movieById: getDataMovieById,\n  getReviews: getDataReviewsById,\n  getActors: getDataActorsById,\n  getMoviesByName: getDataMoviesBySearchName,\n};\n\nexport default apiGet;\n"],"names":["RequestError","message","role","toast","PosterWrapper","styled","props","photo","p","theme","position","relative","colors","white","center","BackLinkButton","Link","space","fixed","radii","round","borders","none","fontSizes","s","orangeFirst","m","MovieDetailsWrapper","MovieImage","MovieTextWrapper","MovieTitle","l","lineHeights","body","MovieDate","MovieRatingWrapper","MovieRating","OverviewTitle","heading","OverviewText","GenresTitle","GenresList","GenresListItem","movieData","backdrop_path","title","original_title","vote_average","poster_path","release_date","overview","genres","image_path","backLinkHref","useLocation","state","from","to","src","alt","Number","toFixed","length","map","id","name","AdditionWrapper","MovieLinksTitle","MovieLinksWrapper","MovieLinks","NavLink","movieId","useParams","useState","movie","setMovie","error","setError","location","useEffect","apiGet","movieAttributes","Suspense","fallback","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","context","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","cast","getDataReviewsById","page","getTrending","getDataTrendingMovies","movieById","getDataMovieById","getReviews","getActors","getDataActorsById","getMoviesByName","getDataMoviesBySearchName"],"sourceRoot":""}