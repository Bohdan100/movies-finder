{"version":3,"file":"static/js/244.39d8ae17.chunk.js","mappings":"oLAIaA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,iBAAKC,KAAK,QAAV,UACGC,EAAAA,GAAAA,MACC,yFAEF,uBAAIF,S,4LCRGG,EAAiBC,EAAAA,GAAAA,GAAH,8KAEP,SAAAC,GAAC,OAAIA,EAAEC,UAMdC,EAAwBH,EAAAA,GAAAA,EAAH,sMAClB,SAAAC,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAChB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MACzB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAEjB,SAAAJ,GAAC,OAAIA,EAAEG,MAAME,UAAUC,KACrB,SAAAN,GAAC,OAAIA,EAAEG,MAAMI,YAAYC,QACzB,SAAAR,GAAC,OAAIA,EAAEG,MAAMM,YAAYC,QAC/B,SAAAV,GAAC,OAAIA,EAAEG,MAAMQ,OAAOC,eAIlBC,EAAsBd,EAAAA,GAAAA,EAAH,wKAChB,SAAAC,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAChB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MACzB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAEjB,SAAAJ,GAAC,OAAIA,EAAEG,MAAME,UAAUC,KACrB,SAAAN,GAAC,OAAIA,EAAEG,MAAMI,YAAYC,QACzB,SAAAR,GAAC,OAAIA,EAAEG,MAAMM,YAAYC,QAC/B,SAAAV,GAAC,OAAIA,EAAEG,MAAMQ,OAAOG,SAGlBC,EAAkBhB,EAAAA,GAAAA,EAAH,8OACZ,SAAAC,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAChB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MACzB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAEjB,SAAAJ,GAAC,OAAIA,EAAEG,MAAME,UAAUW,KACrB,SAAAhB,GAAC,OAAIA,EAAEG,MAAMI,YAAYC,QACzB,SAAAR,GAAC,OAAIA,EAAEG,MAAMM,YAAYC,QAC/B,SAAAV,GAAC,OAAIA,EAAEG,MAAMQ,OAAOG,SAOlBG,EAAiBlB,EAAAA,GAAAA,EAAH,wKACX,SAAAC,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAChB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MACzB,SAAAJ,GAAC,OAAIA,EAAEG,MAAMC,MAAM,MAEjB,SAAAJ,GAAC,OAAIA,EAAEG,MAAME,UAAUa,KACrB,SAAAlB,GAAC,OAAIA,EAAEG,MAAMI,YAAYC,QACzB,SAAAR,GAAC,OAAIA,EAAEG,MAAMM,YAAYC,QAC/B,SAAAV,GAAC,OAAIA,EAAEG,MAAMQ,OAAOC,e,SCoB/B,EA7DgB,WACd,OAAsCO,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAA2BC,EAAAA,EAAAA,MAAnBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAiBjB,IAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEiCC,EAAAA,EAAAA,WAAkBH,GAFnD,UAESI,EAFT,wDAOGR,EAAeQ,GAPlB,gDASGN,EAAS,KAAM5B,SATlB,wDAAD,KAYC,CAAC8B,IAECL,EAAL,CAIIA,GACFU,EAAAA,GAAAA,WAAyB,KAI3B,OACE,gCACGV,EAAYW,OAAS,GACpB,SAACjC,EAAD,CAAgBG,OAAM,UAJV,mCAIU,OAAiByB,EAAMM,eAA7C,SACGZ,EAAYa,KACX,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,WAApC,OACE,2BACE,UAACpC,EAAD,sBAAgCiC,MAEhC,UAACtB,EAAD,mBACQ,IACLwB,GAAcC,EACX,IAAIC,KAAKF,GAAcC,GAAYE,qBACnC,qBAGN,SAACzB,EAAD,UAAkBqB,MAVXF,SAgBf,SAACjB,EAAD,uDAIDK,IAAS,SAAC5B,EAAA,EAAD,CAAcC,QAAS2B,U,yECrEjCmB,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAOWA,EAAKC,SAPhB,gH,aAYA,O,oBAAA,WAAyCC,GAAzC,gFACEL,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVI,MAAM,GAAD,OAAKD,IAJd,kBAO2BL,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAAgCf,GAAhC,gFACEW,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCV,IAN5D,uBAMYc,EANZ,EAMYA,KANZ,kBAQWA,GARX,gH,aAaA,O,oBAAA,WAAiCd,GAAjC,gFACEW,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCV,EAAjC,aAN3B,uBAMYc,EANZ,EAMYA,KANZ,kBAOWA,EAAKI,MAPhB,gHAYeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCnB,GAAlC,gFACEW,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVO,KAAM,GAJV,kBAO2BT,IAAAA,IAAA,UAAaD,EAAb,YAAiCV,EAAjC,aAP3B,uBAOYc,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMrB,EAAS,CACb2B,Y,WA/DaC,OAAAA,EAAAA,MAAAA,KAAAA,YAgEbC,UApDF,SAagC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,YAwCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,YAgBbO,UAzCF,SAaiC,GAAlBC,OAAAA,EAAAA,MAAAA,KAAAA,YA6BbC,gBAnEF,SAYyC,GAA1BC,OAAAA,EAAAA,MAAAA,KAAAA,aA0Df","sources":["components/RequestError/RequestError.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RequestError = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      {toast.error(\n        'An error occurred while searching for your query. Try to refine your search keyword.'\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nRequestError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsWrapper = styled.ul`\n  padding: 30px 30px 30px 30px;\n  background: url(${p => p.poster});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const AuthorPostDescription = styled.p`\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.orangeFirst};\n  text-transform: uppercase;\n`;\n\nexport const DatePostDescription = styled.p`\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const PostDescription = styled.p`\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[7]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const MissingReviews = styled.p`\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.orangeFirst};\n`;\n","import { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { animateScroll } from 'react-scroll';\n\nimport apiGet from 'service/api';\nimport { RequestError } from 'components/RequestError';\n\nimport {\n  ReviewsWrapper,\n  AuthorPostDescription,\n  DatePostDescription,\n  PostDescription,\n  MissingReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsInfo, setReviewsInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId, movie } = useOutletContext();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const responseReviews = await apiGet.getReviews(movieId);\n        if (!responseReviews) {\n          return;\n        }\n\n        setReviewsInfo(responseReviews);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (!reviewsInfo) {\n    return;\n  }\n\n  if (reviewsInfo) {\n    animateScroll.scrollMore(400);\n  }\n\n  const main_path = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      {reviewsInfo.length > 0 ? (\n        <ReviewsWrapper poster={`${main_path}${movie.backdrop_path}`}>\n          {reviewsInfo.map(\n            ({ id, author, content, created_at, updated_at }) => (\n              <li key={id}>\n                <AuthorPostDescription>Author: {author}</AuthorPostDescription>\n\n                <DatePostDescription>\n                  Date:{' '}\n                  {created_at || updated_at\n                    ? new Date(created_at || updated_at).toLocaleDateString()\n                    : 'No information'}\n                </DatePostDescription>\n\n                <PostDescription>{content}</PostDescription>\n              </li>\n            )\n          )}\n        </ReviewsWrapper>\n      ) : (\n        <MissingReviews>\n          We don't have any reviews for this movie\n        </MissingReviews>\n      )}\n      {error && <RequestError message={error} />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '74c5e15336c71e6f10e46fc816460a0f';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get trending movies\nasync function getDataTrendingMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movies by search name\nasync function getDataMoviesBySearchName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movie by id\nasync function getDataMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// get actors by id\nasync function getDataActorsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// get reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  getTrending: getDataTrendingMovies,\n  movieById: getDataMovieById,\n  getReviews: getDataReviewsById,\n  getActors: getDataActorsById,\n  getMoviesByName: getDataMoviesBySearchName,\n};\n\nexport default apiGet;\n"],"names":["RequestError","message","role","toast","ReviewsWrapper","styled","p","poster","AuthorPostDescription","theme","space","fontSizes","m","lineHeights","body","fontWeights","bold","colors","orangeFirst","DatePostDescription","white","PostDescription","s","MissingReviews","l","useState","reviewsInfo","setReviewsInfo","error","setError","useOutletContext","movieId","movie","useEffect","apiGet","responseReviews","animateScroll","length","backdrop_path","map","id","author","content","created_at","updated_at","Date","toLocaleDateString","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","name","query","cast","getDataReviewsById","page","getTrending","getDataTrendingMovies","movieById","getDataMovieById","getReviews","getActors","getDataActorsById","getMoviesByName","getDataMoviesBySearchName"],"sourceRoot":""}