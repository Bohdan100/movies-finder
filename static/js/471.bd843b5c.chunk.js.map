{"version":3,"file":"static/js/471.bd843b5c.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.jsx","components/SearchMoviesList/SearchMoviesList.styled.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RequestError = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      {toast.error(\n        'An error occurred while searching for your query. Try to refine your search keyword.'\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nRequestError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingMoviesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  margin-top: 0px;\n  padding-top: ${p => p.theme.space[0]}px;\n\n  background-color: ${p => p.theme.colors.backgroundBlueFirst};\n\n  @media screen and (min-width: 625px) {\n    margin-top: 90px;\n  }\n`;\n\nexport const Title = styled.h1`\n  width: 100%;\n  margin-top: 0;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  position: relative;\n  text-align: center;\n  text-transform: uppercase;\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0008);\n  font-size: 1.3em;\n  line-height: 0.7em;\n  outline: none;\n  animation: animate 8s linear infinite;\n`;\n\nexport const MovieCard = styled(Link)`\n  background: ${p => p.theme.colors.backgroundBlueSecond};\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  width: 100%;\n  max-width: 200px;\n  margin: 0.5em;\n  border-radius: 10px;\n  display: inline-block;\n  text-decoration: none;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const MovieImage = styled.img`\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: ${p => p.theme.space[2]}px;\n  border-top-right-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: ${p => p.theme.space[1]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const MovieTitle = styled.span`\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n  color: ${p => p.theme.colors.white};\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  Title,\n  TrendingMoviesWrapper,\n  MovieCard,\n  MovieImage,\n  MovieTextWrapper,\n  MovieTitle,\n} from './SearchMoviesList.styled';\n\nimport defaultMovie from 'components/defaultImg/defaultMovie.png';\n\nexport const SearchMoviesList = ({ searchMovies }) => {\n  const location = useLocation();\n  const main_path = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <TrendingMoviesWrapper>\n      <Title>SEARCH MOVIES</Title>\n      {searchMovies.map(({ title, poster_path, name, id }) => {\n        return (\n          <MovieCard key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImage\n              src={poster_path ? `${main_path}${poster_path}` : defaultMovie}\n              alt=\"Film's poster\"\n              id={id}\n            />\n            <MovieTextWrapper>\n              <MovieTitle>{title || name}</MovieTitle>\n            </MovieTextWrapper>\n          </MovieCard>\n        );\n      })}\n    </TrendingMoviesWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const SearchFormWrapper = styled.div`\n  top: -61px;\n\n  position: relative;\n  padding-top: 150px;\n  padding-bottom: ${p => p.theme.space[0]}px;\n  display: block;\n  z-index: 0;\n\n  @media screen and (min-width: 625px) {\n    position: fixed;\n    padding-top: 70px;\n    z-index: 100;\n    padding-left: 160px;\n  }\n  @media screen and (min-width: 695px) {\n    padding-left: 100px;\n  }\n  @media screen and (min-width: 730px) {\n    padding-left: ${p => p.theme.space[8]}px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: ${p => p.theme.space[4]}px;\n  }\n  @media screen and (min-width: 800px) {\n    padding-left: ${p => p.theme.space[0]}px;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n  outline: 0;\n  float: left;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  border-radius: ${p => p.theme.radii.border};\n  svg {\n    display: inline-block;\n    width: 1.2em;\n    height: 1.2em;\n    stroke-width: 0;\n    stroke: currentColor;\n    fill: currentColor;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 244px;\n  height: 42px;\n  padding: 0 16px;\n\n  outline: ${p => p.theme.space[0]}px;\n  line-height: 42px;\n  background-color: rgba(255, 255, 255, 0.8);\n  color: ${p => p.theme.colors.blackFirst};\n  border: ${p => p.theme.borders.none};\n  float: left;\n  border-radius: 4px 0 0 4px;\n\n  &:hover,\n  &:focus {\n    outline: ${p => p.theme.space[0]}px;\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.orangeFirst};\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 42px;\n  width: 42px;\n\n  outline: ${p => p.theme.space[2]}px;\n  background: none;\n  background-color: rgba(38, 50, 56, 0.8);\n  float: left;\n  text-align: center;\n  line-height: 42px;\n  border: 0;\n  color: ${p => p.theme.colors.white};\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: 16px;\n  text-rendering: auto;\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  transition: background-color 0.4s ease;\n  border-radius: 0 4px 4px 0;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.orangeFirst};\n    & > svg {\n      width: 1.4em;\n      height: 1.4em;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport apiGet from 'service/api';\nimport { SearchMoviesList } from 'components/SearchMoviesList';\nimport { RequestError } from 'components/RequestError';\n\nimport {\n  MainWrapper,\n  SearchFormWrapper,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchMoviesList, setSearchMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('name') ?? '';\n\n  const [error, setError] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const searchValue = e.target.searchInput.value.trim().toLowerCase();\n\n    if (searchValue === '') {\n      toast.warn('Please enter a valid search term!');\n      return;\n    }\n\n    setSearchParams({ name: searchValue });\n  };\n\n  useEffect(() => {\n    if (!searchName) {\n      setSearchMoviesList([]);\n      return;\n    }\n\n    (async () => {\n      try {\n        const responseMovies = await apiGet.getMoviesByName(searchName);\n        if (!responseMovies) {\n          return;\n        }\n\n        setSearchMoviesList(responseMovies);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [searchName]);\n\n  return (\n    <MainWrapper>\n      <SearchFormWrapper>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies by name\"\n            name=\"searchInput\"\n          />\n\n          <SearchButton type=\"submit\">\n            <AiOutlineSearch />\n          </SearchButton>\n        </SearchForm>\n      </SearchFormWrapper>\n      {searchMoviesList.length > 0 && (\n        <SearchMoviesList searchMovies={searchMoviesList} />\n      )}\n      {error && <RequestError />}\n    </MainWrapper>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '74c5e15336c71e6f10e46fc816460a0f';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get trending movies\nasync function getDataTrendingMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movies by search name\nasync function getDataMoviesBySearchName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movie by id\nasync function getDataMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// get actors by id\nasync function getDataActorsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// get reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  getTrending: getDataTrendingMovies,\n  movieById: getDataMovieById,\n  getReviews: getDataReviewsById,\n  getActors: getDataActorsById,\n  getMoviesByName: getDataMoviesBySearchName,\n};\n\nexport default apiGet;\n"],"names":["RequestError","message","role","toast","TrendingMoviesWrapper","styled","p","theme","space","colors","backgroundBlueFirst","Title","MovieCard","Link","backgroundBlueSecond","MovieImage","MovieTextWrapper","MovieTitle","fontSizes","m","lineHeights","heading","white","SearchMoviesList","searchMovies","location","useLocation","map","title","poster_path","name","id","to","state","from","src","defaultMovie","alt","MainWrapper","SearchFormWrapper","SearchForm","radii","border","SearchInput","blackFirst","borders","none","orangeFirst","SearchButton","useState","searchMoviesList","setSearchMoviesList","useSearchParams","searchParams","setSearchParams","searchName","get","error","setError","useEffect","apiGet","responseMovies","onSubmit","e","preventDefault","searchValue","target","searchInput","value","trim","toLowerCase","type","autoComplete","autoFocus","placeholder","length","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","cast","getDataReviewsById","page","getTrending","getDataTrendingMovies","movieById","getDataMovieById","getReviews","getActors","getDataActorsById","getMoviesByName","getDataMoviesBySearchName"],"sourceRoot":""}