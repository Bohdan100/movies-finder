{"version":3,"file":"static/js/349.e0b57760.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RequestError = ({ message }) => {\n  return (\n    <div role=\"alert\">\n      {toast.error(\n        'An error occurred while searching for your query. Try to refine your search keyword.'\n      )}\n      <p>{message}</p>\n    </div>\n  );\n};\n\nRequestError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  position: relative;\n  font-size: 1.3em;\n  text-transform: uppercase;\n  width: 100%;\n  text-align: center;\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0008);\n  line-height: 0.7em;\n  outline: none;\n  animation: animate 8s linear infinite;\n`;\n\nexport const TrendingMoviesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding-top: 90px;\n\n  background-color: ${p => p.theme.colors.backgroundBlueFirst};\n`;\n\nexport const MovieCard = styled(Link)`\n  width: 100%;\n  max-width: 200px;\n  display: inline-block;\n  margin: 0.5em;\n  background: ${p => p.theme.colors.backgroundBlueSecond};\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  border-radius: 10px;\n  text-decoration: none;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 260px;\n\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n\n  border-top-left-radius: ${p => p.theme.space[2]}px;\n  border-top-right-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: ${p => p.theme.space[1]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const MovieTitle = styled.span`\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n  color: ${p => p.theme.colors.white};\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport apiGet from 'service/api';\nimport { RequestError } from 'components/RequestError';\n\nimport {\n  Title,\n  TrendingMoviesWrapper,\n  MovieCard,\n  MovieImage,\n  MovieTextWrapper,\n  MovieTitle,\n} from './Home.styled';\n\nimport defaultMovie from 'components/defaultImg/defaultMovie.png';\n\nconst Home = () => {\n  const location = useLocation();\n\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const responseMovies = await apiGet.getTrending();\n        if (!responseMovies) {\n          return;\n        }\n\n        setTrendingMovies(responseMovies);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, []);\n\n  const main_path = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <TrendingMoviesWrapper>\n      <Title>TRENDING MOVIES</Title>\n\n      {trendingMovies.map(({ title, poster_path, name, id }) => {\n        return (\n          <MovieCard key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImage\n              src={poster_path ? `${main_path}${poster_path}` : defaultMovie}\n              alt=\"Film's poster\"\n              id={id}\n            />\n            <MovieTextWrapper>\n              <MovieTitle>{title || name}</MovieTitle>\n            </MovieTextWrapper>\n          </MovieCard>\n        );\n      })}\n      {error && <RequestError message={error} />}\n    </TrendingMoviesWrapper>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '74c5e15336c71e6f10e46fc816460a0f';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get trending movies\nasync function getDataTrendingMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movies by search name\nasync function getDataMoviesBySearchName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get movie by id\nasync function getDataMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// get actors by id\nasync function getDataActorsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// get reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  getTrending: getDataTrendingMovies,\n  movieById: getDataMovieById,\n  getReviews: getDataReviewsById,\n  getActors: getDataActorsById,\n  getMoviesByName: getDataMoviesBySearchName,\n};\n\nexport default apiGet;\n"],"names":["RequestError","message","role","toast","Title","styled","TrendingMoviesWrapper","p","theme","colors","backgroundBlueFirst","MovieCard","Link","backgroundBlueSecond","MovieImage","space","MovieTextWrapper","MovieTitle","fontSizes","m","lineHeights","heading","white","location","useLocation","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","apiGet","responseMovies","map","title","poster_path","name","id","to","state","from","src","defaultMovie","alt","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","cast","getDataReviewsById","page","getTrending","getDataTrendingMovies","movieById","getDataMovieById","getReviews","getActors","getDataActorsById","getMoviesByName","getDataMoviesBySearchName"],"sourceRoot":""}